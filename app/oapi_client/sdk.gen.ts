// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-axios';
import type { CreateItemsThesurveReportsData, CreateItemsThesurveReportsResponse, CreateItemsThesurveReportsError, ReadItemsThesurvePostingsData, ReadItemsThesurvePostingsResponse, ReadItemsThesurvePostingsError, CreateItemsThesurvePostingsData, CreateItemsThesurvePostingsResponse, CreateItemsThesurvePostingsError, ReadSingleItemsThesurvePostingsData, ReadSingleItemsThesurvePostingsResponse, ReadSingleItemsThesurvePostingsError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
};

/**
 * Create an Item
 * Create a new thesurve_reports item.
 */
export const createItemsThesurveReports = <ThrowOnError extends boolean = false>(options?: Options<CreateItemsThesurveReportsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<CreateItemsThesurveReportsResponse, CreateItemsThesurveReportsError, ThrowOnError>({
        url: '/items/thesurve_reports',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * List Items
 * List the thesurve_postings items.
 */
export const readItemsThesurvePostings = <ThrowOnError extends boolean = false>(options?: Options<ReadItemsThesurvePostingsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ReadItemsThesurvePostingsResponse, ReadItemsThesurvePostingsError, ThrowOnError>({
        security: [
            {
                name: 'Authorization',
                type: 'apiKey'
            }
        ],
        querySerializer: {
            array: {
                explode: false,
                style: 'form'
            }
        },
        url: '/items/thesurve_postings',
        ...options
    });
};

/**
 * Create an Item
 * Create a new thesurve_postings item.
 */
export const createItemsThesurvePostings = <ThrowOnError extends boolean = false>(options?: Options<CreateItemsThesurvePostingsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<CreateItemsThesurvePostingsResponse, CreateItemsThesurvePostingsError, ThrowOnError>({
        url: '/items/thesurve_postings',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Retrieve an Item
 * Retrieve a single thesurve_postings item by unique identifier.
 */
export const readSingleItemsThesurvePostings = <ThrowOnError extends boolean = false>(options: Options<ReadSingleItemsThesurvePostingsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ReadSingleItemsThesurvePostingsResponse, ReadSingleItemsThesurvePostingsError, ThrowOnError>({
        querySerializer: {
            array: {
                explode: false,
                style: 'form'
            }
        },
        url: '/items/thesurve_postings/{id}',
        ...options
    });
};